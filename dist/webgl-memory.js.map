{"version":3,"file":"webgl-memory.js","sources":["../src/texture-utils.js","../src/utils.js","../src/augment-api.js","../src/index.ts"],"sourcesContent":["\n/* PixelFormat */\nconst ALPHA                          = 0x1906;\nconst RGB                            = 0x1907;\nconst RGBA                           = 0x1908;\nconst LUMINANCE                      = 0x1909;\nconst LUMINANCE_ALPHA                = 0x190A;\nconst DEPTH_COMPONENT                = 0x1902;\nconst DEPTH_STENCIL                  = 0x84F9;\n\nconst R8                           = 0x8229;\nconst R8_SNORM                     = 0x8F94;\nconst R16F                         = 0x822D;\nconst R32F                         = 0x822E;\nconst R8UI                         = 0x8232;\nconst R8I                          = 0x8231;\nconst RG16UI                       = 0x823A;\nconst RG16I                        = 0x8239;\nconst RG32UI                       = 0x823C;\nconst RG32I                        = 0x823B;\nconst RG8                          = 0x822B;\nconst RG8_SNORM                    = 0x8F95;\nconst RG16F                        = 0x822F;\nconst RG32F                        = 0x8230;\nconst RG8UI                        = 0x8238;\nconst RG8I                         = 0x8237;\nconst R16UI                        = 0x8234;\nconst R16I                         = 0x8233;\nconst R32UI                        = 0x8236;\nconst R32I                         = 0x8235;\nconst RGB8                         = 0x8051;\nconst SRGB8                        = 0x8C41;\nconst RGB565                       = 0x8D62;\nconst RGB8_SNORM                   = 0x8F96;\nconst R11F_G11F_B10F               = 0x8C3A;\nconst RGB9_E5                      = 0x8C3D;\nconst RGB16F                       = 0x881B;\nconst RGB32F                       = 0x8815;\nconst RGB8UI                       = 0x8D7D;\nconst RGB8I                        = 0x8D8F;\nconst RGB16UI                      = 0x8D77;\nconst RGB16I                       = 0x8D89;\nconst RGB32UI                      = 0x8D71;\nconst RGB32I                       = 0x8D83;\nconst RGBA8                        = 0x8058;\nconst SRGB8_ALPHA8                 = 0x8C43;\nconst RGBA8_SNORM                  = 0x8F97;\nconst RGB5_A1                      = 0x8057;\nconst RGBA4                        = 0x8056;\nconst RGB10_A2                     = 0x8059;\nconst RGBA16F                      = 0x881A;\nconst RGBA32F                      = 0x8814;\nconst RGBA8UI                      = 0x8D7C;\nconst RGBA8I                       = 0x8D8E;\nconst RGB10_A2UI                   = 0x906F;\nconst RGBA16UI                     = 0x8D76;\nconst RGBA16I                      = 0x8D88;\nconst RGBA32I                      = 0x8D82;\nconst RGBA32UI                     = 0x8D70;\n\nconst DEPTH_COMPONENT16            = 0x81A5;\nconst DEPTH_COMPONENT24            = 0x81A6;\nconst DEPTH_COMPONENT32F           = 0x8CAC;\nconst DEPTH32F_STENCIL8            = 0x8CAD;\nconst DEPTH24_STENCIL8             = 0x88F0;\n\n/* DataType */\n// const BYTE                         = 0x1400;\nconst UNSIGNED_BYTE                = 0x1401;\n// const SHORT                        = 0x1402;\nconst UNSIGNED_SHORT               = 0x1403;\n// const INT                          = 0x1404;\nconst UNSIGNED_INT                 = 0x1405;\nconst FLOAT                        = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst HALF_FLOAT_OES               = 0x8D61;  // Thanks Khronos for making this different >:(\n// const UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\n// const UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\n// const UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\n// const FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\n// const UNSIGNED_INT_24_8            = 0x84FA;\n\nconst RG                           = 0x8227;\nconst RG_INTEGER                   = 0x8228;\nconst RED                          = 0x1903;\nconst RED_INTEGER                  = 0x8D94;\nconst RGB_INTEGER                  = 0x8D98;\nconst RGBA_INTEGER                 = 0x8D99;\n\nconst SRGB_ALPHA_EXT               = 0x8C42;\n\n\nconst formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  const f = formatInfo;\n  f[ALPHA]           = { numColorComponents: 1, };\n  f[LUMINANCE]       = { numColorComponents: 1, };\n  f[LUMINANCE_ALPHA] = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RED]             = { numColorComponents: 1, };\n  f[RED_INTEGER]     = { numColorComponents: 1, };\n  f[RG]              = { numColorComponents: 2, };\n  f[RG_INTEGER]      = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGB_INTEGER]     = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RGBA_INTEGER]    = { numColorComponents: 4, };\n  f[DEPTH_COMPONENT] = { numColorComponents: 1, };\n  f[DEPTH_STENCIL]   = { numColorComponents: 2, };\n}\n\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to texImage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nlet s_textureInternalFormatInfo;\nfunction getTextureInternalFormatInfo(internalFormat) {\n  if (!s_textureInternalFormatInfo) {\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = {};\n    // unsized formats\n    t[ALPHA]              = { bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\n    t[LUMINANCE]          = { bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\n    t[LUMINANCE_ALPHA]    = { bytesPerElement: [2, 4, 4, 8],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\n    t[RGB]                = { bytesPerElement: [3, 6, 6, 12, 2],    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5], };\n    t[RGBA]               = { bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1], };\n    t[SRGB_ALPHA_EXT]     = { bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1], };\n    t[DEPTH_COMPONENT]    = { bytesPerElement: [2, 4],              type: [UNSIGNED_INT, UNSIGNED_SHORT], };\n    t[DEPTH_STENCIL]      = { bytesPerElement: [4],                 };\n\n    // sized formats\n    t[R8]                 = { bytesPerElement: [1],  };\n    t[R8_SNORM]           = { bytesPerElement: [1],  };\n    t[R16F]               = { bytesPerElement: [2],  };\n    t[R32F]               = { bytesPerElement: [4],  };\n    t[R8UI]               = { bytesPerElement: [1],  };\n    t[R8I]                = { bytesPerElement: [1],  };\n    t[R16UI]              = { bytesPerElement: [2],  };\n    t[R16I]               = { bytesPerElement: [2],  };\n    t[R32UI]              = { bytesPerElement: [4],  };\n    t[R32I]               = { bytesPerElement: [4],  };\n    t[RG8]                = { bytesPerElement: [2],  };\n    t[RG8_SNORM]          = { bytesPerElement: [2],  };\n    t[RG16F]              = { bytesPerElement: [4],  };\n    t[RG32F]              = { bytesPerElement: [8],  };\n    t[RG8UI]              = { bytesPerElement: [2],  };\n    t[RG8I]               = { bytesPerElement: [2],  };\n    t[RG16UI]             = { bytesPerElement: [4],  };\n    t[RG16I]              = { bytesPerElement: [4],  };\n    t[RG32UI]             = { bytesPerElement: [8],  };\n    t[RG32I]              = { bytesPerElement: [8],  };\n    t[RGB8]               = { bytesPerElement: [3],  };\n    t[SRGB8]              = { bytesPerElement: [3],  };\n    t[RGB565]             = { bytesPerElement: [2],  };\n    t[RGB8_SNORM]         = { bytesPerElement: [3],  };\n    t[R11F_G11F_B10F]     = { bytesPerElement: [4],  };\n    t[RGB9_E5]            = { bytesPerElement: [4],  };\n    t[RGB16F]             = { bytesPerElement: [6],  };\n    t[RGB32F]             = { bytesPerElement: [12], };\n    t[RGB8UI]             = { bytesPerElement: [3],  };\n    t[RGB8I]              = { bytesPerElement: [3],  };\n    t[RGB16UI]            = { bytesPerElement: [6],  };\n    t[RGB16I]             = { bytesPerElement: [6],  };\n    t[RGB32UI]            = { bytesPerElement: [12], };\n    t[RGB32I]             = { bytesPerElement: [12], };\n    t[RGBA8]              = { bytesPerElement: [4],  };\n    t[SRGB8_ALPHA8]       = { bytesPerElement: [4],  };\n    t[RGBA8_SNORM]        = { bytesPerElement: [4],  };\n    t[RGB5_A1]            = { bytesPerElement: [2],  };\n    t[RGBA4]              = { bytesPerElement: [2],  };\n    t[RGB10_A2]           = { bytesPerElement: [4],  };\n    t[RGBA16F]            = { bytesPerElement: [8],  };\n    t[RGBA32F]            = { bytesPerElement: [16], };\n    t[RGBA8UI]            = { bytesPerElement: [4],  };\n    t[RGBA8I]             = { bytesPerElement: [4],  };\n    t[RGB10_A2UI]         = { bytesPerElement: [4],  };\n    t[RGBA16UI]           = { bytesPerElement: [8],  };\n    t[RGBA16I]            = { bytesPerElement: [8],  };\n    t[RGBA32I]            = { bytesPerElement: [16], };\n    t[RGBA32UI]           = { bytesPerElement: [16], };\n    // Sized Internal\n    t[DEPTH_COMPONENT16]  = { bytesPerElement: [2],  };\n    t[DEPTH_COMPONENT24]  = { bytesPerElement: [4],  };\n    t[DEPTH_COMPONENT32F] = { bytesPerElement: [4],  };\n    t[DEPTH24_STENCIL8]   = { bytesPerElement: [4],  };\n    t[DEPTH32F_STENCIL8]  = { bytesPerElement: [4],  };\n\n    s_textureInternalFormatInfo = t;\n  }\n  return s_textureInternalFormatInfo[internalFormat];\n}\n\nfunction makeComputeBlockRectSizeFunction(blockWidth, blockHeight, bytesPerBlock) {\n  return function(width, height, depth) {\n    const blocksAcross = (width + blockWidth - 1) / blockWidth | 0;\n    const blocksDown =  (height + blockHeight - 1) / blockHeight | 0;\n    return blocksAcross * blocksDown * bytesPerBlock * depth;\n  };\n}\n\nfunction makeComputePaddedRectSizeFunction(minWidth, minHeight, divisor) {\n  return function(width, height, depth) {\n    return (Math.max(width, minWidth) * Math.max(height, minHeight) / divisor | 0) * depth;\n  };\n}\n\n// WEBGL_compressed_texture_s3tc\nconst COMPRESSED_RGB_S3TC_DXT1_EXT        = 0x83F0;\nconst COMPRESSED_RGBA_S3TC_DXT1_EXT       = 0x83F1;\nconst COMPRESSED_RGBA_S3TC_DXT3_EXT       = 0x83F2;\nconst COMPRESSED_RGBA_S3TC_DXT5_EXT       = 0x83F3;\n// WEBGL_compressed_texture_etc1\nconst COMPRESSED_RGB_ETC1_WEBGL           = 0x8D64;\n// WEBGL_compressed_texture_pvrtc\nconst COMPRESSED_RGB_PVRTC_4BPPV1_IMG      = 0x8C00;\nconst COMPRESSED_RGB_PVRTC_2BPPV1_IMG      = 0x8C01;\nconst COMPRESSED_RGBA_PVRTC_4BPPV1_IMG     = 0x8C02;\nconst COMPRESSED_RGBA_PVRTC_2BPPV1_IMG     = 0x8C03;\n// WEBGL_compressed_texture_etc\nconst COMPRESSED_R11_EAC                        = 0x9270;\nconst COMPRESSED_SIGNED_R11_EAC                 = 0x9271;\nconst COMPRESSED_RG11_EAC                       = 0x9272;\nconst COMPRESSED_SIGNED_RG11_EAC                = 0x9273;\nconst COMPRESSED_RGB8_ETC2                      = 0x9274;\nconst COMPRESSED_SRGB8_ETC2                     = 0x9275;\nconst COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2  = 0x9276;\nconst COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277;\nconst COMPRESSED_RGBA8_ETC2_EAC                 = 0x9278;\nconst COMPRESSED_SRGB8_ALPHA8_ETC2_EAC          = 0x9279;\n// WEBGL_compressed_texture_astc\nconst COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93B0;\nconst COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93B1;\nconst COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93B2;\nconst COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93B3;\nconst COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93B4;\nconst COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93B5;\nconst COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93B6;\nconst COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93B7;\nconst COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93B8;\nconst COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93B9;\nconst COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93BA;\nconst COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93BB;\nconst COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93BC;\nconst COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93BD;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93D0;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93D1;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93D2;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93D3;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93D4;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93D5;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93D6;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93D7;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93D8;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93D9;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93DA;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93DB;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93DC;\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93DD;\n// WEBGL_compressed_texture_s3tc_srgb\nconst COMPRESSED_SRGB_S3TC_DXT1_EXT        = 0x8C4C;\nconst COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT  = 0x8C4D;\nconst COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT  = 0x8C4E;\nconst COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT  = 0x8C4F;\n// EXT_texture_compression_bptc\nconst COMPRESSED_RGBA_BPTC_UNORM_EXT = 0x8E8C;\nconst COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT = 0x8E8D;\nconst COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT = 0x8E8E;\nconst COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT = 0x8E8F;\n// EXT_texture_compression_rgtc\nconst COMPRESSED_RED_RGTC1_EXT = 0x8DBB;\nconst COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC;\nconst COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD;\nconst COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE;\n\nconst compressedTextureFunctions = new Map([\n  [ COMPRESSED_RGB_S3TC_DXT1_EXT, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n  [ COMPRESSED_RGBA_S3TC_DXT1_EXT, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n  [ COMPRESSED_RGBA_S3TC_DXT3_EXT, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n  [ COMPRESSED_RGBA_S3TC_DXT5_EXT, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n\n  [ COMPRESSED_RGB_ETC1_WEBGL, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n\n  [ COMPRESSED_RGB_PVRTC_4BPPV1_IMG, makeComputePaddedRectSizeFunction(8, 8, 2) ],\n  [ COMPRESSED_RGBA_PVRTC_4BPPV1_IMG, makeComputePaddedRectSizeFunction(8, 8, 2) ],\n  [ COMPRESSED_RGB_PVRTC_2BPPV1_IMG, makeComputePaddedRectSizeFunction(16, 8, 4) ],\n  [ COMPRESSED_RGBA_PVRTC_2BPPV1_IMG, makeComputePaddedRectSizeFunction(16, 8, 4) ],\n\n  [ COMPRESSED_R11_EAC, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n  [ COMPRESSED_SIGNED_R11_EAC, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n  [ COMPRESSED_RGB8_ETC2, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n  [ COMPRESSED_SRGB8_ETC2, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n  [ COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n  [ COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n\n  [ COMPRESSED_RG11_EAC, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n  [ COMPRESSED_SIGNED_RG11_EAC, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n  [ COMPRESSED_RGBA8_ETC2_EAC, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ETC2_EAC, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n\n  [ COMPRESSED_RGBA_ASTC_4x4_KHR, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n  [ COMPRESSED_RGBA_ASTC_5x4_KHR, makeComputeBlockRectSizeFunction(5, 4, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR, makeComputeBlockRectSizeFunction(5, 4, 16) ],\n  [ COMPRESSED_RGBA_ASTC_5x5_KHR, makeComputeBlockRectSizeFunction(5, 5, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR, makeComputeBlockRectSizeFunction(5, 5, 16) ],\n  [ COMPRESSED_RGBA_ASTC_6x5_KHR, makeComputeBlockRectSizeFunction(6, 5, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR, makeComputeBlockRectSizeFunction(6, 5, 16) ],\n  [ COMPRESSED_RGBA_ASTC_6x6_KHR, makeComputeBlockRectSizeFunction(6, 6, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR, makeComputeBlockRectSizeFunction(6, 6, 16) ],\n  [ COMPRESSED_RGBA_ASTC_8x5_KHR, makeComputeBlockRectSizeFunction(8, 5, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR, makeComputeBlockRectSizeFunction(8, 5, 16) ],\n  [ COMPRESSED_RGBA_ASTC_8x6_KHR, makeComputeBlockRectSizeFunction(8, 6, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR, makeComputeBlockRectSizeFunction(8, 6, 16) ],\n  [ COMPRESSED_RGBA_ASTC_8x8_KHR, makeComputeBlockRectSizeFunction(8, 8, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR, makeComputeBlockRectSizeFunction(8, 8, 16) ],\n  [ COMPRESSED_RGBA_ASTC_10x5_KHR, makeComputeBlockRectSizeFunction(10, 5, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR, makeComputeBlockRectSizeFunction(10, 5, 16) ],\n  [ COMPRESSED_RGBA_ASTC_10x6_KHR, makeComputeBlockRectSizeFunction(10, 6, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR, makeComputeBlockRectSizeFunction(10, 6, 16) ],\n  [ COMPRESSED_RGBA_ASTC_10x8_KHR, makeComputeBlockRectSizeFunction(10, 8, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR, makeComputeBlockRectSizeFunction(10, 8, 16) ],\n  [ COMPRESSED_RGBA_ASTC_10x10_KHR, makeComputeBlockRectSizeFunction(10, 10, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR, makeComputeBlockRectSizeFunction(10, 10, 16) ],\n  [ COMPRESSED_RGBA_ASTC_12x10_KHR, makeComputeBlockRectSizeFunction(12, 10, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR, makeComputeBlockRectSizeFunction(12, 10, 16) ],\n  [ COMPRESSED_RGBA_ASTC_12x12_KHR, makeComputeBlockRectSizeFunction(12, 12, 16) ],\n  [ COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR, makeComputeBlockRectSizeFunction(12, 12, 16) ],\n\n  [ COMPRESSED_SRGB_S3TC_DXT1_EXT, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n  [ COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT, makeComputeBlockRectSizeFunction(4, 4, 8) ],\n  [ COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n  [ COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, makeComputeBlockRectSizeFunction(4, 4, 16) ],\n\n  [ COMPRESSED_RGBA_BPTC_UNORM_EXT, makeComputeBlockRectSizeFunction( 4, 4, 16 ) ],\n  [ COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT, makeComputeBlockRectSizeFunction( 4, 4, 16 ) ],\n  [ COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT, makeComputeBlockRectSizeFunction( 4, 4, 16 ) ],\n  [ COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT, makeComputeBlockRectSizeFunction( 4, 4, 16 ) ],\n\n  [ COMPRESSED_RED_RGTC1_EXT, makeComputeBlockRectSizeFunction( 4, 4, 8 ) ],\n  [ COMPRESSED_SIGNED_RED_RGTC1_EXT, makeComputeBlockRectSizeFunction( 4, 4, 8 ) ],\n  [ COMPRESSED_RED_GREEN_RGTC2_EXT, makeComputeBlockRectSizeFunction( 4, 4, 16 ) ],\n  [ COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT, makeComputeBlockRectSizeFunction( 4, 4, 16 ) ],\n]);\n\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\nexport function getBytesPerElementForInternalFormat(internalFormat, type) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  if (info.type) {\n    const ndx = info.type.indexOf(type);\n    if (ndx < 0) {\n      throw new Error(`unsupported type ${type} for internalformat ${internalFormat}`);\n    }\n    return info.bytesPerElement[ndx];\n  }\n  return info.bytesPerElement[0];\n}\n\nfunction getBytesForMipUncompressed(internalFormat, width, height, depth, type) {\n  const bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  return width * height * depth * bytesPerElement;\n}\n\nexport function getBytesForMip(internalFormat, width, height, depth, type) {\n  const fn = compressedTextureFunctions.get(internalFormat);\n  return fn ? fn(width, height, depth) : getBytesForMipUncompressed(internalFormat, width, height, depth, type);\n}\n","export function isWebGL2(gl) {\n  // a proxy for if this is webgl\n  return !!gl.texImage3D;\n}\n\nexport function isTypedArray(v) {\n  return v && v.buffer && v.buffer instanceof ArrayBuffer;\n}\n\nexport function isBufferSource(v) {\n  return isTypedArray(v) || v instanceof ArrayBuffer;\n}\n\n// ---------------------------------\nconst FLOAT                         = 0x1406;\nconst INT                           = 0x1404;\nconst BOOL                          = 0x8B56;\nconst UNSIGNED_INT                  = 0x1405;\n\nconst TEXTURE_BINDING_2D            = 0x8069;\nconst TEXTURE_BINDING_CUBE_MAP      = 0x8514;\nconst TEXTURE_BINDING_3D            = 0x806A;\nconst TEXTURE_BINDING_2D_ARRAY      = 0x8C1D;\n\n\nconst ARRAY_BUFFER                   = 0x8892;\nconst ELEMENT_ARRAY_BUFFER           = 0x8893;\nconst ARRAY_BUFFER_BINDING           = 0x8894;\nconst ELEMENT_ARRAY_BUFFER_BINDING   = 0x8895;\nconst TEXTURE_2D                     = 0x0DE1;\nconst TEXTURE_3D                     = 0x806F;\nconst TEXTURE_2D_ARRAY               = 0x8C1A;\nconst TEXTURE_CUBE_MAP               = 0x8513;\nconst FRAMEBUFFER                    = 0x8D40;\nconst RENDERBUFFER                   = 0x8D41;\nconst FRAMEBUFFER_BINDING            = 0x8CA6;\nconst RENDERBUFFER_BINDING           = 0x8CA7;\nconst TRANSFORM_FEEDBACK_BUFFER      = 0x8C8E;\nconst TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;\nconst DRAW_FRAMEBUFFER               = 0x8CA9;\nconst READ_FRAMEBUFFER               = 0x8CA8;\nconst READ_FRAMEBUFFER_BINDING       = 0x8CAA;\nconst UNIFORM_BUFFER                 = 0x8A11;\nconst UNIFORM_BUFFER_BINDING         = 0x8A28;\nconst TRANSFORM_FEEDBACK             = 0x8E22;\nconst TRANSFORM_FEEDBACK_BINDING     = 0x8E25;\n\nconst bindPointMap = new Map([\n  [ARRAY_BUFFER, ARRAY_BUFFER_BINDING],\n  [ELEMENT_ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER_BINDING],\n  [TEXTURE_2D, TEXTURE_BINDING_2D],\n  [TEXTURE_CUBE_MAP, TEXTURE_BINDING_CUBE_MAP],\n  [TEXTURE_3D, TEXTURE_BINDING_3D],\n  [TEXTURE_2D_ARRAY, TEXTURE_BINDING_2D_ARRAY],\n  [RENDERBUFFER, RENDERBUFFER_BINDING],\n  [FRAMEBUFFER, FRAMEBUFFER_BINDING],\n  [DRAW_FRAMEBUFFER, FRAMEBUFFER_BINDING],\n  [READ_FRAMEBUFFER, READ_FRAMEBUFFER_BINDING],\n  [UNIFORM_BUFFER, UNIFORM_BUFFER_BINDING],\n  [TRANSFORM_FEEDBACK_BUFFER, TRANSFORM_FEEDBACK_BUFFER_BINDING],\n  [TRANSFORM_FEEDBACK, TRANSFORM_FEEDBACK_BINDING],\n]);\n\nexport function getBindingQueryEnumForBindPoint(bindPoint) {\n  return bindPointMap.get(bindPoint);\n}\n\nconst BYTE                         = 0x1400;\nconst SHORT                        = 0x1402;\nconst UNSIGNED_BYTE                = 0x1401;\nconst UNSIGNED_SHORT               = 0x1403;\n\nconst glTypeToSizeMap = new Map([\n  [BOOL           , 1],\n  [BYTE           , 1],\n  [UNSIGNED_BYTE  , 1],\n  [SHORT          , 2],\n  [UNSIGNED_SHORT , 2],\n  [INT            , 4],\n  [UNSIGNED_INT   , 4],\n  [FLOAT          , 4],\n]);\n\nexport function getBytesPerValueForGLType(type) {\n  return glTypeToSizeMap.get(type) || 0;\n}\n\nconst glTypeToTypedArrayMap = new Map([\n  [UNSIGNED_BYTE,  Uint8Array],\n  [UNSIGNED_SHORT, Uint16Array],\n  [UNSIGNED_INT,   Uint32Array],\n]);\n\nexport function glTypeToTypedArray(type) {\n  return glTypeToTypedArrayMap.get(type);\n}\n\nexport function getDrawingbufferInfo(gl) {\n  return {\n    samples: gl.getParameter(gl.SAMPLES) || 1,\n    depthBits: gl.getParameter(gl.DEPTH_BITS),\n    stencilBits: gl.getParameter(gl.STENCIL_BITS),\n    contextAttributes: gl.getContextAttributes(),\n  };\n}\n\nfunction computeDepthStencilSize(drawingBufferInfo) {\n  const {depthBits, stencilBits} = drawingBufferInfo;\n  const depthSize = (depthBits + stencilBits + 7) / 8 | 0;\n  return depthSize === 3 ? 4 : depthSize;\n}\n\nexport function computeDrawingbufferSize(gl, drawingBufferInfo) {\n  if (gl.isContextLost()) {\n    return 0;\n  }\n  const {samples} = drawingBufferInfo;\n  // this will need to change for hi-color support\n  const colorSize = 4;\n  const size = gl.drawingBufferWidth * gl.drawingBufferHeight;\n  const depthStencilSize = computeDepthStencilSize(drawingBufferInfo);\n  return size * colorSize + size * samples * colorSize + size * depthStencilSize;\n}\n\n// I know this is not a full check\nexport function isNumber(v) {\n  return typeof v === 'number';\n}\n","/*\nThe MIT License (MIT)\n\nCopyright (c) 2021 Gregg Tavares\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport {\n  getBytesForMip,\n} from './texture-utils.js';\nimport {\n  computeDrawingbufferSize,\n  getDrawingbufferInfo,\n  isBufferSource,\n  isNumber,\n} from './utils.js';\n\n//------------ [ from https://github.com/KhronosGroup/WebGLDeveloperTools ]\n\n/*\n** Copyright (c) 2012 The Khronos Group Inc.\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and/or associated documentation files (the\n** \"Materials\"), to deal in the Materials without restriction, including\n** without limitation the rights to use, copy, modify, merge, publish,\n** distribute, sublicense, and/or sell copies of the Materials, and to\n** permit persons to whom the Materials are furnished to do so, subject to\n** the following conditions:\n**\n** The above copyright notice and this permission notice shall be included\n** in all copies or substantial portions of the Materials.\n**\n** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n*/\n\n\nconst augmentedSet = new Set();\n\n/**\n * Given a WebGL context replaces all the functions with wrapped functions\n * that call gl.getError after every command\n *\n * @param {WebGLRenderingContext|Extension} ctx The webgl context to wrap.\n * @param {string} nameOfClass (eg, webgl, webgl2, OES_texture_float)\n */\n// eslint-disable-next-line consistent-return\nexport function augmentAPI(ctx, nameOfClass, options = {}) {\n\n  if (augmentedSet.has(ctx)) {\n    return ctx;\n  }\n  augmentedSet.add(ctx);\n\n  const origGLErrorFn = options.origGLErrorFn || ctx.getError;\n\n  function createSharedState(ctx) {\n    const drawingBufferInfo = getDrawingbufferInfo(ctx);\n    const sharedState = {\n      baseContext: ctx,\n      config: options,\n      apis: {\n        // custom extension\n        gman_webgl_memory: {\n          ctx: {\n            getMemoryInfo() {\n              const drawingbuffer = computeDrawingbufferSize(ctx, drawingBufferInfo);\n              return {\n                memory: {\n                  ...memory,\n                  drawingbuffer,\n                  total: drawingbuffer + memory.buffer + memory.texture + memory.renderbuffer,\n                },\n                resources: {\n                  ...resources,\n                },\n              };\n            },\n          },\n        },\n      },\n      resources: {},\n      memory: {\n        texture: 0,\n        buffer: 0,\n        renderbuffer: 0,\n      },\n      bindings: new Map(),\n      defaultVertexArray: {},\n      webglObjectToMemory: new Map(),\n    };\n\n    const unRestorableAPIs = new Set([\n      'webgl',\n      'webgl2',\n      'webgl_lose_context',\n    ]);\n\n    function resetSharedState() {\n      sharedState.bindings.clear();\n      sharedState.webglObjectToMemory.clear();\n      sharedState.webglObjectToMemory.set(sharedState.defaultVertexArray, {});\n      sharedState.currentVertexArray = sharedState.defaultVertexArray;\n      [sharedState.resources, sharedState.memory].forEach(function(obj) {\n        for (const prop in obj) {\n          obj[prop] = 0;\n        }\n      });\n    }\n\n    function handleContextLost() {\n      // Issues:\n      //   * all resources are lost.\n      //     Solution: handled by resetSharedState\n      //   * all functions are no-op\n      //     Solutions:\n      //        * swap all functions for noop\n      //          (not so easy because some functions return values)\n      //        * wrap all functions is a isContextLost check forwarder\n      //          (slow? and same as above)\n      //        * have each function manually check for context lost\n      //          (simple but repetitive)\n      //   * all extensions are lost\n      //      Solution: For these we go through and restore all the functions\n      //         on each extension\n      resetSharedState();\n      sharedState.isContextLost = true;\n\n      // restore all original functions for extensions since\n      // user will have to get new extensions.\n      for (const [name, {ctx, origFuncs}] of [...Object.entries(sharedState.apis)]) {\n        if (!unRestorableAPIs.has(name) && origFuncs) {\n          augmentedSet.delete(ctx);\n          for (const [funcName, origFn] of Object.entries(origFuncs)) {\n            ctx[funcName] = origFn;\n          }\n          delete apis[name];\n        }\n      }\n    }\n\n    function handleContextRestored() {\n      sharedState.isContextLost = false;\n    }\n\n    if (ctx.canvas) {\n      ctx.canvas.addEventListener('webglcontextlost', handleContextLost);\n      ctx.canvas.addEventListener('webglcontextrestored', handleContextRestored);\n    }\n\n    resetSharedState();\n    return sharedState;\n  }\n\n  const sharedState = options.sharedState || createSharedState(ctx);\n  options.sharedState = sharedState;\n\n  const {\n    apis,\n    bindings,\n    memory,\n    resources,\n    webglObjectToMemory,\n  } = sharedState;\n\n  const origFuncs = {};\n\n  function noop() {\n  }\n\n  function makeCreateWrapper(ctx, typeName, _funcName) {\n    const funcName = _funcName || `create${typeName[0].toUpperCase()}${typeName.substr(1)}`;\n    if (!ctx[funcName]) {\n      return null;\n    }\n    resources[typeName] = 0;\n    return function(ctx, funcName, args, webglObj) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      ++resources[typeName];\n      webglObjectToMemory.set(webglObj, {\n        size: 0,\n      });\n    };\n  }\n\n  function makeDeleteWrapper(typeName, fn = noop, _funcName) {\n    const funcName = _funcName || `delete${typeName[0].toUpperCase()}${typeName.substr(1)}`;\n    if (!ctx[funcName]) {\n      return null;\n    }\n    return function(ctx, funcName, args) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      const [obj] = args;\n      const info = webglObjectToMemory.get(obj);\n      if (info) {\n        --resources[typeName];\n        fn(obj, info);\n        // TODO: handle resource counts\n        webglObjectToMemory.delete(obj);\n      }\n    };\n  }\n\n  function updateRenderbuffer(target, samples, internalFormat, width, height) {\n    if (sharedState.isContextLost) {\n      return;\n    }\n    const obj = bindings.get(target);\n    if (!obj) {\n      throw new Error(`no renderbuffer bound to ${target}`);\n    }\n    const info = webglObjectToMemory.get(obj);\n    if (!info) {\n      throw new Error(`unknown renderbuffer ${obj}`);\n    }\n\n    const bytesForMip = getBytesForMip(internalFormat, width, height, 1);\n    const newSize = bytesForMip * samples;\n\n    memory.renderbuffer -= info.size;\n    info.size = newSize;\n    memory.renderbuffer += newSize;\n  }\n\n  const ELEMENT_ARRAY_BUFFER           = 0x8893;\n\n  const UNSIGNED_BYTE                  = 0x1401;\n  const TEXTURE_CUBE_MAP               = 0x8513;\n  const TEXTURE_2D_ARRAY               = 0x8C1A;\n  const TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\n  const TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\n  const TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\n  const TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\n  const TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\n  const TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851A;\n\n  const TEXTURE_BASE_LEVEL             = 0x813C;\n  const TEXTURE_MAX_LEVEL              = 0x813D;\n\n  const cubemapTargets = new Set([\n    TEXTURE_CUBE_MAP_POSITIVE_X,\n    TEXTURE_CUBE_MAP_NEGATIVE_X,\n    TEXTURE_CUBE_MAP_POSITIVE_Y,\n    TEXTURE_CUBE_MAP_NEGATIVE_Y,\n    TEXTURE_CUBE_MAP_POSITIVE_Z,\n    TEXTURE_CUBE_MAP_NEGATIVE_Z,\n  ]);\n\n  function isCubemapFace(target) {\n    return cubemapTargets.has(target);\n  }\n\n  function getTextureInfo(target) {\n    target = isCubemapFace(target) ? TEXTURE_CUBE_MAP : target;\n    const obj = bindings.get(target);\n    if (!obj) {\n      throw new Error(`no texture bound to ${target}`);\n    }\n    const info = webglObjectToMemory.get(obj);\n    if (!info) {\n      throw new Error(`unknown texture ${obj}`);\n    }\n    return info;\n  }\n\n  function updateMipLevel(info, target, level, internalFormat, width, height, depth, type) {\n    const oldSize = info.size;\n    const newMipSize = getBytesForMip(internalFormat, width, height, depth, type);\n\n    const faceNdx = isCubemapFace(target)\n      ? target - TEXTURE_CUBE_MAP_POSITIVE_X\n      : 0;\n\n    info.mips = info.mips || [];\n    info.mips[level] = info.mips[level] || [];\n    const mipFaceInfo = info.mips[level][faceNdx] || {};\n    info.size -= mipFaceInfo.size || 0;\n\n    mipFaceInfo.size = newMipSize;\n    mipFaceInfo.internalFormat = internalFormat;\n    mipFaceInfo.type = type;\n    mipFaceInfo.width = width;\n    mipFaceInfo.height = height;\n    mipFaceInfo.depth = depth;\n\n    info.mips[level][faceNdx] = mipFaceInfo;\n    info.size += newMipSize;\n\n    memory.texture -= oldSize;\n    memory.texture += info.size;\n  }\n\n  function updateTexStorage(target, levels, internalFormat, width, height, depth) {\n    const info = getTextureInfo(target);\n    const numFaces = target === TEXTURE_CUBE_MAP ? 6 : 1;\n    const baseFaceTarget = target === TEXTURE_CUBE_MAP ? TEXTURE_CUBE_MAP_POSITIVE_X : target;\n    for (let level = 0; level < levels; ++level) {\n      for (let face = 0; face < numFaces; ++face) {\n        updateMipLevel(info, baseFaceTarget + face, level, internalFormat, width, height, depth);\n      }\n      width = Math.ceil(Math.max(width / 2, 1));\n      height = Math.ceil(Math.max(height / 2, 1));\n      depth = target === TEXTURE_2D_ARRAY ? depth : Math.ceil(Math.max(depth / 2, 1));\n    }\n  }\n\n  function handleBindVertexArray(gl, funcName, args) {\n    if (sharedState.isContextLost) {\n      return;\n    }\n    const [va] = args;\n    sharedState.currentVertexArray = va ? va : sharedState.defaultVertexArray;\n  }\n\n  function handleBufferBinding(target, obj) {\n    if (sharedState.isContextLost) {\n      return;\n    }\n    switch (target) {\n      case ELEMENT_ARRAY_BUFFER: {\n          const info = webglObjectToMemory.get(sharedState.currentVertexArray);\n          info.elementArrayBuffer = obj;\n          break;\n        }\n      default:\n        bindings.set(target, obj);\n        break;\n    }\n  }\n\n  const preChecks = {};\n  const postChecks = {\n    // WebGL1\n    //   void bufferData(GLenum target, GLsizeiptr size, GLenum usage);\n    //   void bufferData(GLenum target, [AllowShared] BufferSource? srcData, GLenum usage);\n    // WebGL2:\n    //   void bufferData(GLenum target, [AllowShared] ArrayBufferView srcData, GLenum usage, GLuint srcOffset,\n    //                   optional GLuint length = 0);\n    bufferData(gl, funcName, args) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      const [target, src, /* usage */, /*srcOffset = 0*/, length = undefined] = args;\n      let obj;\n      switch (target) {\n        case ELEMENT_ARRAY_BUFFER:\n          {\n            const info = webglObjectToMemory.get(sharedState.currentVertexArray);\n            obj = info.elementArrayBuffer;\n          }\n          break;\n        default:\n          obj = bindings.get(target);\n          break;\n      }\n      if (!obj) {\n        throw new Error(`no buffer bound to ${target}`);\n      }\n      let newSize = 0;\n      if (length !== undefined) {\n        newSize = length * src.BYTES_PER_ELEMENT;\n      } else if (isBufferSource(src)) {\n        newSize = src.byteLength;\n      } else if (isNumber(src)) {\n        newSize = src;\n      } else {\n        throw new Error(`unsupported bufferData src type ${src}`);\n      }\n\n      const info = webglObjectToMemory.get(obj);\n      if (!info) {\n        throw new Error(`unknown buffer ${obj}`);\n      }\n\n      memory.buffer -= info.size;\n      info.size = newSize;\n      memory.buffer += newSize;\n    },\n\n    bindVertexArray: handleBindVertexArray,\n    bindVertexArrayOES: handleBindVertexArray,\n\n    bindBuffer(gl, funcName, args) {\n      const [target, obj] = args;\n      handleBufferBinding(target, obj);\n    },\n\n    bindBufferBase(gl, funcName, args) {\n      const [target, /*ndx*/, obj] = args;\n      handleBufferBinding(target, obj);\n    },\n\n    bindBufferRange(gl, funcName, args) {\n      const [target, /*ndx*/, obj, /*offset*/, /*size*/] = args;\n      handleBufferBinding(target, obj);\n    },\n\n    bindRenderbuffer(gl, funcName, args) {\n      if (sharedState.isContextLost) {\n       return;\n      }\n      const [target, obj] = args;\n      bindings.set(target, obj);\n    },\n\n    bindTexture(gl, funcName, args) {\n      if (sharedState.isContextLost) {\n       return;\n      }\n      const [target, obj] = args;\n      bindings.set(target, obj);\n    },\n\n    // void gl.copyTexImage2D(target, level, internalformat, x, y, width, height, border);\n    copyTexImage2D(ctx, funcName, args) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      const [target, level, internalFormat, /*x*/, /*y*/, width, height, /*border*/] = args;\n      const info = getTextureInfo(target);\n      updateMipLevel(info, target, level, internalFormat, width, height, 1, UNSIGNED_BYTE);\n    },\n\n    createBuffer: makeCreateWrapper(ctx, 'buffer'),\n    createFramebuffer: makeCreateWrapper(ctx, 'framebuffer'),\n    createRenderbuffer: makeCreateWrapper(ctx, 'renderbuffer'),\n    createProgram: makeCreateWrapper(ctx, 'program'),\n    createQuery: makeCreateWrapper(ctx, 'query'),\n    createShader: makeCreateWrapper(ctx, 'shader'),\n    createSampler: makeCreateWrapper(ctx, 'sampler'),\n    createTexture: makeCreateWrapper(ctx, 'texture'),\n    createTransformFeedback: makeCreateWrapper(ctx, 'transformFeedback'),\n    createVertexArray: makeCreateWrapper(ctx, 'vertexArray'),\n    createVertexArrayOES: makeCreateWrapper(ctx, 'vertexArray', 'createVertexArrayOES'),\n\n    // WebGL 1:\n    // void gl.compressedTexImage2D(target, level, internalformat, width, height, border, ArrayBufferView? pixels);\n    //\n    // Additionally available in WebGL 2:\n    // read from buffer bound to gl.PIXEL_UNPACK_BUFFER\n    // void gl.compressedTexImage2D(target, level, internalformat, width, height, border, GLsizei imageSize, GLintptr offset);\n    // void gl.compressedTexImage2D(target, level, internalformat, width, height, border,\n    //                              ArrayBufferView srcData, optional srcOffset, optional srcLengthOverride);\n    compressedTexImage2D(ctx, funcName, args) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      const [target, level, internalFormat, width, height] = args;\n      const info = getTextureInfo(target);\n      updateMipLevel(info, target, level, internalFormat, width, height, 1, UNSIGNED_BYTE);\n    },\n\n    // read from buffer bound to gl.PIXEL_UNPACK_BUFFER\n    // void gl.compressedTexImage3D(target, level, internalformat, width, height, depth, border, GLsizei imageSize, GLintptr offset);\n    // void gl.compressedTexImage3D(target, level, internalformat, width, height, depth, border,\n    //                              ArrayBufferView srcData, optional srcOffset, optional srcLengthOverride);\n    compressedTexImage3D(ctx, funcName, args) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      const [target, level, internalFormat, width, height, depth] = args;\n      const info = getTextureInfo(target);\n      updateMipLevel(info, target, level, internalFormat, width, height, depth, UNSIGNED_BYTE);\n    },\n\n    deleteBuffer: makeDeleteWrapper('buffer', function(obj, info) {\n      memory.buffer -= info.size;\n    }),\n    deleteFramebuffer: makeDeleteWrapper('framebuffer'),\n    deleteProgram: makeDeleteWrapper('program'),\n    deleteQuery: makeDeleteWrapper('query'),\n    deleteRenderbuffer: makeDeleteWrapper('renderbuffer', function(obj, info) {\n      memory.renderbuffer -= info.size;\n    }),\n    deleteSampler: makeDeleteWrapper('sampler'),\n    deleteShader: makeDeleteWrapper('shader'),\n    deleteSync: makeDeleteWrapper('sync'),\n    deleteTexture: makeDeleteWrapper('texture', function(obj, info) {\n      memory.texture -= info.size;\n    }),\n    deleteTransformFeedback: makeDeleteWrapper('transformFeedback'),\n    deleteVertexArray: makeDeleteWrapper('vertexArray'),\n    deleteVertexArrayOES: makeDeleteWrapper('vertexArray', noop, 'deleteVertexArrayOES'),\n\n    fenceSync: function(ctx) {\n      if (sharedState.isContextLost) {\n        return undefined;\n      }\n      if (!ctx.fenceSync) {\n        return undefined;\n      }\n      resources.sync = 0;\n      return function(ctx, funcName, args, webglObj) {\n        ++resources.sync;\n\n        webglObjectToMemory.set(webglObj, {\n          size: 0,\n        });\n      };\n    }(ctx),\n\n    generateMipmap(ctx, funcName, args) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      const [target] = args;\n      const info = getTextureInfo(target);\n      const baseMipNdx = info.parameters ? info.parameters.get(TEXTURE_BASE_LEVEL) || 0 : 0;\n      const maxMipNdx = info.parameters ? info.parameters.get(TEXTURE_MAX_LEVEL) || 1024 : 1024;\n      const mipInfo = info.mips[baseMipNdx][0];\n      let {width, height, depth} = mipInfo;\n      const {internalFormat, type} = mipInfo;\n      let level = baseMipNdx + 1;\n\n      const numFaces = target === TEXTURE_CUBE_MAP ? 6 : 1;\n      const baseFaceTarget = target === TEXTURE_CUBE_MAP ? TEXTURE_CUBE_MAP_POSITIVE_X : target;\n      while (level <= maxMipNdx && !(width === 1 && height === 1 && (depth === 1 || target === TEXTURE_2D_ARRAY))) {\n        width = Math.ceil(Math.max(width / 2, 1));\n        height = Math.ceil(Math.max(height / 2, 1));\n        depth = target === TEXTURE_2D_ARRAY ? depth : Math.ceil(Math.max(depth / 2, 1));\n        for (let face = 0; face < numFaces; ++face) {\n          updateMipLevel(info, baseFaceTarget + face, level, internalFormat, width, height, depth, type);\n        }\n        ++level;\n      }\n    },\n\n    getSupportedExtensions(ctx, funcName, args, result) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      result.push('GMAN_webgl_memory');\n    },\n\n    // void gl.renderbufferStorage(target, internalFormat, width, height);\n    // gl.RGBA4: 4 red bits, 4 green bits, 4 blue bits 4 alpha bits.\n    // gl.RGB565: 5 red bits, 6 green bits, 5 blue bits.\n    // gl.RGB5_A1: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit.\n    // gl.DEPTH_COMPONENT16: 16 depth bits.\n    // gl.STENCIL_INDEX8: 8 stencil bits.\n    // gl.DEPTH_STENCIL\n    renderbufferStorage(ctx, funcName, args) {\n      const [target, internalFormat, width, height] = args;\n      updateRenderbuffer(target, 1, internalFormat, width, height);\n    },\n\n    // void gl.renderbufferStorageMultisample(target, samples, internalFormat, width, height);\n    renderbufferStorageMultisample(ctx, funcName, args) {\n      const [target, samples, internalFormat, width, height] = args;\n      updateRenderbuffer(target, samples, internalFormat, width, height);\n    },\n\n    texImage2D(ctx, funcName, args) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      // WebGL1:\n      // void gl.texImage2D(target, level, internalformat, width, height, border, format, type, ArrayBufferView? pixels);\n      // void gl.texImage2D(target, level, internalformat, format, type, ImageData? pixels);\n      // void gl.texImage2D(target, level, internalformat, format, type, HTMLImageElement? pixels);\n      // void gl.texImage2D(target, level, internalformat, format, type, HTMLCanvasElement? pixels);\n      // void gl.texImage2D(target, level, internalformat, format, type, HTMLVideoElement? pixels);\n      // void gl.texImage2D(target, level, internalformat, format, type, ImageBitmap? pixels// );\n\n      // WebGL2:\n      // void gl.texImage2D(target, level, internalformat, width, height, border, format, type, GLintptr offset);\n      // void gl.texImage2D(target, level, internalformat, width, height, border, format, type, HTMLCanvasElement source);\n      // void gl.texImage2D(target, level, internalformat, width, height, border, format, type, HTMLImageElement source);\n      // void gl.texImage2D(target, level, internalformat, width, height, border, format, type, HTMLVideoElement source);\n      // void gl.texImage2D(target, level, internalformat, width, height, border, format, type, ImageBitmap source);\n      // void gl.texImage2D(target, level, internalformat, width, height, border, format, type, ImageData source);\n      // void gl.texImage2D(target, level, internalformat, width, height, border, format, type, ArrayBufferView srcData, srcOffset);\n      const [target, level, internalFormat] = args;\n      let width;\n      let height;\n      let type;\n      if (args.length === 6) {\n        const src = args[5];\n        width = src.width;\n        height = src.height;\n        type = args[4];\n      } else {\n        width = args[3];\n        height = args[4];\n        type = args[7];\n      }\n\n      const info = getTextureInfo(target);\n      updateMipLevel(info, target, level, internalFormat, width, height, 1, type);\n    },\n\n    // void gl.texImage3D(target, level, internalformat, width, height, depth, border, format, type, GLintptr offset);\n    //\n    // void gl.texImage3D(target, level, internalformat, width, height, depth, border, format, type, HTMLCanvasElement source);\n    // void gl.texImage3D(target, level, internalformat, width, height, depth, border, format, type, HTMLImageElement source);\n    // void gl.texImage3D(target, level, internalformat, width, height, depth, border, format, type, HTMLVideoElement source);\n    // void gl.texImage3D(target, level, internalformat, width, height, depth, border, format, type, ImageBitmap source);\n    // void gl.texImage3D(target, level, internalformat, width, height, depth, border, format, type, ImageData source);\n    // void gl.texImage3D(target, level, internalformat, width, height, depth, border, format, type, ArrayBufferView? srcData);\n    // void gl.texImage3D(target, level, internalformat, width, height, depth, border, format, type, ArrayBufferView srcData, srcOffset);\n\n    texImage3D(ctx, funcName, args) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      const [target, level, internalFormat, width, height, depth, /*border*/, /*format*/, type] = args;\n      const info = getTextureInfo(target);\n      updateMipLevel(info, target, level, internalFormat, width, height, depth, type);\n    },\n\n    texParameteri(ctx, funcName, args) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      const [target, pname, value] = args;\n      const info = getTextureInfo(target);\n      info.parameters = info.parameters || new Map();\n      info.parameters.set(pname, value);\n    },\n\n    // void gl.texStorage2D(target, levels, internalformat, width, height);\n    texStorage2D(ctx, funcName, args) {\n      const [target, levels, internalFormat, width, height] = args;\n      updateTexStorage(target, levels, internalFormat, width, height, 1);\n    },\n\n    // void gl.texStorage3D(target, levels, internalformat, width, height, depth);\n    texStorage3D(ctx, funcName, args) {\n      const [target, levels, internalFormat, width, height, depth] = args;\n      updateTexStorage(target, levels, internalFormat, width, height, depth);\n    },\n  };\n\n  const extraWrappers = {\n    getExtension(ctx, propertyName) {\n      if (sharedState.isContextLost) {\n        return;\n      }\n      const origFn = ctx[propertyName];\n      ctx[propertyName] = function(...args) {\n        const extensionName = args[0].toLowerCase();\n        const api = apis[extensionName];\n        if (api) {\n          return api.ctx;\n        }\n        const ext = origFn.call(ctx, ...args);\n        if (ext) {\n          augmentAPI(ext, extensionName, {...options, origGLErrorFn});\n        }\n        return ext;\n      };\n    },\n  };\n\n  // Makes a function that calls a WebGL function and then calls getError.\n  function makeErrorWrapper(ctx, funcName) {\n    const origFn = ctx[funcName];\n    const preCheck = preChecks[funcName] || noop;\n    const postCheck = postChecks[funcName] || noop;\n    if (preCheck === noop && postChecks === noop) {\n      return;\n    }\n    ctx[funcName] = function(...args) {\n      preCheck(ctx, funcName, args);\n      const result = origFn.call(ctx, ...args);\n      postCheck(ctx, funcName, args, result);\n      return result;\n    };\n    const extraWrapperFn = extraWrappers[funcName];\n    if (extraWrapperFn) {\n      extraWrapperFn(ctx, funcName, origGLErrorFn);\n    }\n  }\n\n  // Wrap each function\n  for (const propertyName in ctx) {\n    if (typeof ctx[propertyName] === 'function') {\n      origFuncs[propertyName] = ctx[propertyName];\n      makeErrorWrapper(ctx, propertyName);\n    }\n  }\n\n  apis[nameOfClass.toLowerCase()] = { ctx, origFuncs };\n}\n\n","/*\nThe MIT License (MIT)\n\nCopyright (c) 2021 Gregg Tavares\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { augmentAPI } from \"./augment-api.js\";\n\nexport function wrapGetContext(Ctor: any) {\n    const oldFn = Ctor.prototype.getContext;\n    Ctor.prototype.getContext = function(type: any, ...args: any) {\n        const ctx = oldFn.call(this, type, ...args);\n        // Using bindTexture to see if it's WebGL. Could check for instanceof WebGLRenderingContext\n        // but that might fail if wrapped by debugging extension\n        if (ctx && ctx.bindTexture) {\n            const config = {};\n            augmentAPI(ctx, type, config);\n            ctx.getExtension(\"GMAN_webgl_memory\");\n        }\n        return ctx;\n    };\n}\n\nexport function WrapContexts() {\n    if (typeof HTMLCanvasElement !== \"undefined\") {\n        wrapGetContext(HTMLCanvasElement);\n    }\n    if (typeof OffscreenCanvas !== \"undefined\") {\n        wrapGetContext(OffscreenCanvas);\n    }\n}\n\nexport interface GlMemoryStatistics {\n    memory: {\n        total: number;\n        drawingbuffer: number;\n        buffer: number;\n        texture: number;\n    };\n    resources: {\n        buffer: number;\n        framebuffer: number;\n        program: number;\n        query: number;\n        renderbuffer: number;\n        sampler: number;\n        shader: number;\n        sync: number;\n        texture: number;\n        transformFeedback: number;\n        vertexArray: number;\n    };\n}\n"],"names":[],"mappings":"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"}